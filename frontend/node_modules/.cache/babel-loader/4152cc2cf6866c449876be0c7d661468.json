{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Riana\\\\OneDrive\\\\Desktop\\\\Mini Project\\\\facebook\\\\frontend\\\\src\\\\components\\\\login\\\\LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport { Formik, Form } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport LoginInput from \"../../components/inputs/loginInput\";\nimport { useState } from \"react\";\nimport DotLoader from \"react-spinners/DotLoader\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport Cookies from \"js-cookie\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loginInfos = {\n  email: \"\",\n  password: \"\"\n};\nexport default function LoginForm(_ref) {\n  _s();\n\n  let {\n    setVisible\n  } = _ref;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [login, setLogin] = useState(loginInfos);\n  const {\n    email,\n    password\n  } = login;\n\n  const handleLoginChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setLogin({ ...login,\n      [name]: value\n    });\n  };\n\n  const loginValidation = Yup.object({\n    email: Yup.string().required(\"Email address is required.\").email(\"Must be a valid email.\").max(100),\n    password: Yup.string().required(\"Password is required\")\n  });\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const loginSubmit = async () => {\n    try {\n      setLoading(true);\n      const {\n        data\n      } = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/login`, {\n        email,\n        password\n      });\n      dispatch({\n        type: \"LOGIN\",\n        payload: data\n      });\n      Cookies.set(\"user\", JSON.stringify(data));\n      navigate(\"/\");\n    } catch (error) {\n      setLoading(false);\n      setError(error.response.data.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login_wrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login_1\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"../../icons/facebook.svg\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Facebook helps you connect and share with the people in your life.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login_2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login_2_wrap\",\n        children: [/*#__PURE__*/_jsxDEV(Formik, {\n          enableReinitialize: true,\n          initialValues: {\n            email,\n            password\n          },\n          validationSchema: loginValidation,\n          onSubmit: () => {\n            loginSubmit();\n          },\n          children: formik => /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(LoginInput, {\n              type: \"text\",\n              name: \"email\",\n              placeholder: \"Email address or phone number\",\n              onChange: handleLoginChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(LoginInput, {\n              type: \"password\",\n              name: \"password\",\n              placeholder: \"Password\",\n              onChange: handleLoginChange,\n              bottom: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"blue_btn\",\n              children: \"Log In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/reset\",\n          className: \"forgot_password\",\n          children: \"Forgotten password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DotLoader, {\n          color: \"#1876f2\",\n          loading: loading,\n          size: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error_text\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sign_splitter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"blue_btn open_signup\",\n          onClick: () => setVisible(true),\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"sign_extra\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Create a Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), \" for a celebrity, brand or business.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"sKdwLQ/XeXNSiaNDPshiJjuVBGo=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/Riana/OneDrive/Desktop/Mini Project/facebook/frontend/src/components/login/LoginForm.js"],"names":["Formik","Form","Link","Yup","LoginInput","useState","DotLoader","axios","useDispatch","Cookies","useNavigate","loginInfos","email","password","LoginForm","setVisible","dispatch","navigate","login","setLogin","handleLoginChange","e","name","value","target","loginValidation","object","string","required","max","error","setError","loading","setLoading","loginSubmit","data","post","process","env","REACT_APP_BACKEND_URL","type","payload","set","JSON","stringify","response","message","formik"],"mappings":"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","sourcesContent":["import { Formik, Form } from \"formik\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport LoginInput from \"../../components/inputs/loginInput\";\r\nimport { useState } from \"react\";\r\nimport DotLoader from \"react-spinners/DotLoader\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst loginInfos = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\nexport default function LoginForm({ setVisible }) {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [login, setLogin] = useState(loginInfos);\r\n  const { email, password } = login;\r\n  const handleLoginChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setLogin({ ...login, [name]: value });\r\n  };\r\n  const loginValidation = Yup.object({\r\n    email: Yup.string()\r\n      .required(\"Email address is required.\")\r\n      .email(\"Must be a valid email.\")\r\n      .max(100),\r\n    password: Yup.string().required(\"Password is required\"),\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const loginSubmit = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const { data } = await axios.post(\r\n        `${process.env.REACT_APP_BACKEND_URL}/login`,\r\n        {\r\n          email,\r\n          password,\r\n        }\r\n      );\r\n      dispatch({ type: \"LOGIN\", payload: data });\r\n      Cookies.set(\"user\", JSON.stringify(data));\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setError(error.response.data.message);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"login_wrap\">\r\n      <div className=\"login_1\">\r\n        <img src=\"../../icons/facebook.svg\" alt=\"\" />\r\n        <span>\r\n          Facebook helps you connect and share with the people in your life.\r\n        </span>\r\n      </div>\r\n      <div className=\"login_2\">\r\n        <div className=\"login_2_wrap\">\r\n          <Formik\r\n            enableReinitialize\r\n            initialValues={{\r\n              email,\r\n              password,\r\n            }}\r\n            validationSchema={loginValidation}\r\n            onSubmit={() => {\r\n              loginSubmit();\r\n            }}\r\n          >\r\n            {(formik) => (\r\n              <Form>\r\n                <LoginInput\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  placeholder=\"Email address or phone number\"\r\n                  onChange={handleLoginChange}\r\n                />\r\n                <LoginInput\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  placeholder=\"Password\"\r\n                  onChange={handleLoginChange}\r\n                  bottom\r\n                />\r\n                <button type=\"submit\" className=\"blue_btn\">\r\n                  Log In\r\n                </button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n          <Link to=\"/reset\" className=\"forgot_password\">\r\n            Forgotten password?\r\n          </Link>\r\n          <DotLoader color=\"#1876f2\" loading={loading} size={30} />\r\n\r\n          {error && <div className=\"error_text\">{error}</div>}\r\n          <div className=\"sign_splitter\"></div>\r\n          <button\r\n            className=\"blue_btn open_signup\"\r\n            onClick={() => setVisible(true)}\r\n          >\r\n            Create Account\r\n          </button>\r\n        </div>\r\n        <Link to=\"/\" className=\"sign_extra\">\r\n          <b>Create a Page</b> for a celebrity, brand or business.\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}