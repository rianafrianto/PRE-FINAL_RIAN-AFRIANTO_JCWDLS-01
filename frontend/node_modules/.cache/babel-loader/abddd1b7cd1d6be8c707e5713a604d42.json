{"ast":null,"code":"import axios from \"axios\";\nexport const createPost = async (type, background, text, images, user, token) => {\n  try {\n    const {\n      data\n    } = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/createPost`, {\n      type,\n      background,\n      text,\n      images,\n      user\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return {\n      status: \"ok\",\n      data\n    };\n  } catch (error) {\n    return error.response.data.message;\n  }\n};\nexport const reactPost = async (postId, react, token) => {\n  try {\n    const {\n      data\n    } = await axios.put(`${process.env.REACT_APP_BACKEND_URL}/reactPost`, {\n      postId,\n      react\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return \"ok\";\n  } catch (error) {\n    return error.response.data.message;\n  }\n};\nexport const getReacts = async (postId, token) => {\n  try {\n    const {\n      data\n    } = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/getReacts/${postId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return data;\n  } catch (error) {\n    return error.response.data.message;\n  }\n};\nexport const comment = async (postId, comment, image, token) => {\n  try {\n    const {\n      data\n    } = await axios.put(`${process.env.REACT_APP_BACKEND_URL}/comment`, {\n      postId,\n      comment,\n      image\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return data;\n  } catch (error) {\n    return error.response.data.message;\n  }\n};\nexport const savePost = async (postId, token) => {\n  try {\n    const {\n      data\n    } = await axios.put(`${process.env.REACT_APP_BACKEND_URL}/savePost/${postId}`, {}, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return data;\n  } catch (error) {\n    return error.response.data.message;\n  }\n};\nexport const deletePost = async (postId, token) => {\n  try {\n    const {\n      data\n    } = await axios.delete(`${process.env.REACT_APP_BACKEND_URL}/deletePost/${postId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return data;\n  } catch (error) {\n    return error.response.data.message;\n  }\n};","map":{"version":3,"sources":["C:/Users/Riana/OneDrive/Desktop/Mini Project/fullstack/frontend/src/functions/post.js"],"names":["axios","createPost","type","background","text","images","user","token","data","post","process","env","REACT_APP_BACKEND_URL","headers","Authorization","status","error","response","message","reactPost","postId","react","put","getReacts","get","comment","image","savePost","deletePost","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const createPost = async (\r\n  type,\r\n  background,\r\n  text,\r\n  images,\r\n  user,\r\n  token\r\n) => {\r\n  try {\r\n    const { data } = await axios.post(\r\n      `${process.env.REACT_APP_BACKEND_URL}/createPost`,\r\n      {\r\n        type,\r\n        background,\r\n        text,\r\n        images,\r\n        user,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    return { status: \"ok\", data };\r\n  } catch (error) {\r\n    return error.response.data.message;\r\n  }\r\n};\r\nexport const reactPost = async (postId, react, token) => {\r\n  try {\r\n    const { data } = await axios.put(\r\n      `${process.env.REACT_APP_BACKEND_URL}/reactPost`,\r\n      {\r\n        postId,\r\n        react,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    return \"ok\";\r\n  } catch (error) {\r\n    return error.response.data.message;\r\n  }\r\n};\r\nexport const getReacts = async (postId, token) => {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `${process.env.REACT_APP_BACKEND_URL}/getReacts/${postId}`,\r\n\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    return error.response.data.message;\r\n  }\r\n};\r\nexport const comment = async (postId, comment, image, token) => {\r\n  try {\r\n    const { data } = await axios.put(\r\n      `${process.env.REACT_APP_BACKEND_URL}/comment`,\r\n      {\r\n        postId,\r\n        comment,\r\n        image,\r\n      },\r\n\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    return error.response.data.message;\r\n  }\r\n};\r\nexport const savePost = async (postId, token) => {\r\n  try {\r\n    const { data } = await axios.put(\r\n      `${process.env.REACT_APP_BACKEND_URL}/savePost/${postId}`,\r\n      {},\r\n\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    return error.response.data.message;\r\n  }\r\n};\r\nexport const deletePost = async (postId, token) => {\r\n  try {\r\n    const { data } = await axios.delete(\r\n      `${process.env.REACT_APP_BACKEND_URL}/deletePost/${postId}`,\r\n\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    return error.response.data.message;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}