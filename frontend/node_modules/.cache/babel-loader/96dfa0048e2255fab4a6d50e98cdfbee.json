{"ast":null,"code":"import axios from \"axios\";\nimport { useEffect, useReducer, useState } from \"react\";\nconst [visible, setVisible] = useState(false);\nconst {\n  user\n} = useSelector(state => ({ ...state\n}));\nconst [{\n  loading,\n  error,\n  posts\n}, dispatch] = useReducer(postsReducer, {\n  loading: false,\n  posts: [],\n  error: \"\"\n});\nuseEffect(() => {\n  getAllPosts();\n}, []);\n\nconst getAllPosts = async () => {\n  try {\n    dispatch({\n      type: \"POSTS_REQUEST\"\n    });\n    const {\n      data\n    } = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/getAllposts`, {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    });\n    dispatch({\n      type: \"POSTS_SUCCESS\",\n      payload: data\n    });\n  } catch (error) {\n    var _error$response, _error$response$data;\n\n    dispatch({\n      type: \"POSTS_ERROR\",\n      payload: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message\n    });\n  }\n};\n\nexport const createPost = async (type, background, text, images, user, token) => {\n  try {\n    const {\n      data\n    } = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/createPost`, {\n      type,\n      background,\n      text,\n      images,\n      user\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return {\n      status: \"ok\",\n      data\n    };\n  } catch (error) {\n    return error.response.data.message;\n  }\n};\nexport const reactPost = async (postId, react, token) => {\n  try {\n    const {\n      data\n    } = await axios.put(`${process.env.REACT_APP_BACKEND_URL}/reactPost`, {\n      postId,\n      react\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return \"ok\";\n  } catch (error) {\n    return error.response.data.message;\n  }\n};\nexport const getReacts = async (postId, token) => {\n  try {\n    const {\n      data\n    } = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/getReacts/${postId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return data;\n  } catch (error) {\n    return error.response.data.message;\n  }\n};\nexport const comment = async (postId, comment, image, token) => {\n  try {\n    const {\n      data\n    } = await axios.put(`${process.env.REACT_APP_BACKEND_URL}/comment`, {\n      postId,\n      comment,\n      image\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return data;\n  } catch (error) {\n    return error.response.data.message;\n  }\n};\nexport const savePost = async (postId, token) => {\n  try {\n    const {\n      data\n    } = await axios.put(`${process.env.REACT_APP_BACKEND_URL}/savePost/${postId}`, {}, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return data;\n  } catch (error) {\n    return error.response.data.message;\n  }\n};\nexport const deletePost = async (postId, token) => {\n  try {\n    const {\n      data\n    } = await axios.delete(`${process.env.REACT_APP_BACKEND_URL}/deletePost/${postId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return data;\n  } catch (error) {\n    return error.response.data.message;\n  }\n};\nexport const editPost = async (postId, comment, image, token) => {\n  try {\n    const {\n      data\n    } = await axios.put(`${process.env.REACT_APP_BACKEND_URL}/editpost`, {\n      postId,\n      comment,\n      image\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return data;\n  } catch (error) {\n    return error.response.data.message;\n  }\n};","map":{"version":3,"sources":["C:/Users/Riana/OneDrive/Desktop/Mini Project/fullstack/frontend/src/functions/post.js"],"names":["axios","useEffect","useReducer","useState","visible","setVisible","user","useSelector","state","loading","error","posts","dispatch","postsReducer","getAllPosts","type","data","get","process","env","REACT_APP_BACKEND_URL","headers","Authorization","token","payload","response","message","createPost","background","text","images","post","status","reactPost","postId","react","put","getReacts","comment","image","savePost","deletePost","delete","editPost"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useReducer, useState } from \"react\";\r\nconst [visible, setVisible] = useState(false);\r\nconst { user } = useSelector((state) => ({ ...state }));\r\nconst [{ loading, error, posts }, dispatch] = useReducer(postsReducer, {\r\n  loading: false,\r\n  posts: [],\r\n  error: \"\",\r\n});\r\nuseEffect(() => {\r\n  getAllPosts();\r\n}, []);\r\nconst getAllPosts = async () => {\r\n  try {\r\n    dispatch({\r\n      type: \"POSTS_REQUEST\",\r\n    });\r\n    const { data } = await axios.get(\r\n      `${process.env.REACT_APP_BACKEND_URL}/getAllposts`,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      }\r\n    );\r\n    dispatch({\r\n      type: \"POSTS_SUCCESS\",\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"POSTS_ERROR\",\r\n      payload: error.response?.data?.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createPost = async (\r\n  type,\r\n  background,\r\n  text,\r\n  images,\r\n  user,\r\n  token\r\n) => {\r\n  try {\r\n    const { data } = await axios.post(\r\n      `${process.env.REACT_APP_BACKEND_URL}/createPost`,\r\n      {\r\n        type,\r\n        background,\r\n        text,\r\n        images,\r\n        user,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    return { status: \"ok\", data };\r\n  } catch (error) {\r\n    return error.response.data.message;\r\n  }\r\n};\r\nexport const reactPost = async (postId, react, token) => {\r\n  try {\r\n    const { data } = await axios.put(\r\n      `${process.env.REACT_APP_BACKEND_URL}/reactPost`,\r\n      {\r\n        postId,\r\n        react,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    return \"ok\";\r\n  } catch (error) {\r\n    return error.response.data.message;\r\n  }\r\n};\r\nexport const getReacts = async (postId, token) => {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `${process.env.REACT_APP_BACKEND_URL}/getReacts/${postId}`,\r\n\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    return error.response.data.message;\r\n  }\r\n};\r\nexport const comment = async (postId, comment, image, token) => {\r\n  try {\r\n    const { data } = await axios.put(\r\n      `${process.env.REACT_APP_BACKEND_URL}/comment`,\r\n      {\r\n        postId,\r\n        comment,\r\n        image,\r\n      },\r\n\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    return error.response.data.message;\r\n  }\r\n};\r\nexport const savePost = async (postId, token) => {\r\n  try {\r\n    const { data } = await axios.put(\r\n      `${process.env.REACT_APP_BACKEND_URL}/savePost/${postId}`,\r\n      {},\r\n\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    return error.response.data.message;\r\n  }\r\n};\r\nexport const deletePost = async (postId, token) => {\r\n  try {\r\n    const { data } = await axios.delete(\r\n      `${process.env.REACT_APP_BACKEND_URL}/deletePost/${postId}`,\r\n\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    return error.response.data.message;\r\n  }\r\n};\r\nexport const editPost = async (postId, comment, image, token) => {\r\n  try {\r\n    const { data } = await axios.put(\r\n      `${process.env.REACT_APP_BACKEND_URL}/editpost`,\r\n      {\r\n        postId,\r\n        comment,\r\n        image,\r\n      },\r\n\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    return error.response.data.message;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}