{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Riana\\\\OneDrive\\\\Desktop\\\\Mini Project\\\\fullstack\\\\frontend\\\\src\\\\components\\\\createPostPopup\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport \"./style.css\";\nimport Picker from \"emoji-picker-react\";\nimport EmojiPickerBackgrounds from \"./EmojiPickerBackgrounds\";\nimport AddToYourPost from \"./AddToYourPost\";\nimport ImagePreview from \"./ImagePreview\";\nimport useClickOutside from \"../../helpers/clickOutside\";\nimport { createPost } from \"../../functions/post\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport { useDispatch } from \"react-redux\";\nimport PostError from \"./PostError\";\nimport dataURItoBlob from \"../../helpers/dataURItoBlob\";\nimport { uploadImages } from \"../../functions/uploadImages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreatePostPopup(_ref) {\n  _s();\n\n  let {\n    user,\n    setVisible,\n    posts,\n    dispatch,\n    profile\n  } = _ref;\n  const popup = useRef(null);\n  const [text, setText] = useState(\"\");\n  const [showPrev, setShowPrev] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [background, setBackground] = useState(\"\"); // useClickOutside(popup, () => {\n  //   setVisible(false);\n  // });\n\n  const postSubmit = async () => {\n    if (background) {\n      setLoading(true);\n      const response = await createPost(null, background, text, null, user.id, user.token);\n      setLoading(false);\n\n      if (response.status === \"ok\") {\n        dispatch({\n          type: profile ? \"PROFILE_POSTS\" : \"POSTS_SUCCESS\",\n          payload: [response.data, ...posts]\n        });\n        setBackground(\"\");\n        setText(\"\");\n        setVisible(false);\n      } else {\n        setError(response);\n      }\n    } else if (images && images.length) {\n      setLoading(true);\n      const postImages = images.map(img => {\n        return dataURItoBlob(img);\n      });\n      const path = `${user.username}/post_images`;\n      let formData = new FormData();\n      formData.append(\"path\", path);\n      postImages.forEach(image => {\n        formData.append(\"file\", image);\n      });\n      const response = await uploadImages(formData, path, user.token);\n      const res = await createPost(null, null, text, response, user.id, user.token);\n      setLoading(false);\n\n      if (res.status === \"ok\") {\n        dispatch({\n          type: profile ? \"PROFILE_POSTS\" : \"POSTS_SUCCESS\",\n          payload: [res.data, ...posts]\n        });\n        setText(\"\");\n        setImages(\"\");\n        setVisible(false);\n      } else {\n        setError(res);\n      }\n    } else if (text) {\n      setLoading(true);\n      const response = await createPost(null, null, text, null, user.id, user.token);\n      setLoading(false);\n\n      if (response.status === \"ok\") {\n        dispatch({\n          type: profile ? \"PROFILE_POSTS\" : \"POSTS_SUCCESS\",\n          payload: [response.data, ...posts]\n        });\n        setBackground(\"\");\n        setText(\"\");\n        setVisible(false);\n      } else {\n        setError(response);\n      }\n    } else {\n      console.log(\"nothing\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blur\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postBox scrollbar\",\n      ref: popup,\n      children: [error && /*#__PURE__*/_jsxDEV(PostError, {\n        error: error,\n        setError: setError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"small_circle\",\n          onClick: () => {\n            setVisible(false);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"exit_icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Create Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box_profile\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.picture,\n          alt: \"\",\n          className: \"box_profile_img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box_col\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box_profile_name\",\n            children: [user.first_name, \" \", user.last_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box_privacy\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"../../../icons/public.png\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Public\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"arrowDown_icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), !showPrev ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(EmojiPickerBackgrounds, {\n          text: text,\n          user: user,\n          setText: setText,\n          showPrev: showPrev,\n          setBackground: setBackground,\n          background: background\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(ImagePreview, {\n        text: text,\n        user: user,\n        setText: setText,\n        showPrev: showPrev,\n        images: images,\n        setImages: setImages,\n        setShowPrev: setShowPrev,\n        setError: setError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AddToYourPost, {\n        setShowPrev: setShowPrev\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"post_submit\",\n        onClick: () => {\n          postSubmit();\n        },\n        disabled: loading,\n        children: loading ? /*#__PURE__*/_jsxDEV(PulseLoader, {\n          color: \"#fff\",\n          size: 5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 22\n        }, this) : \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreatePostPopup, \"MLNeCqIBpR34CQgcHcIdHr/O9gA=\");\n\n_c = CreatePostPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePostPopup\");","map":{"version":3,"sources":["C:/Users/Riana/OneDrive/Desktop/Mini Project/fullstack/frontend/src/components/createPostPopup/index.js"],"names":["useEffect","useRef","useState","Picker","EmojiPickerBackgrounds","AddToYourPost","ImagePreview","useClickOutside","createPost","PulseLoader","useDispatch","PostError","dataURItoBlob","uploadImages","CreatePostPopup","user","setVisible","posts","dispatch","profile","popup","text","setText","showPrev","setShowPrev","loading","setLoading","error","setError","images","setImages","background","setBackground","postSubmit","response","id","token","status","type","payload","data","length","postImages","map","img","path","username","formData","FormData","append","forEach","image","res","console","log","picture","first_name","last_name"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport \"./style.css\";\r\nimport Picker from \"emoji-picker-react\";\r\nimport EmojiPickerBackgrounds from \"./EmojiPickerBackgrounds\";\r\nimport AddToYourPost from \"./AddToYourPost\";\r\nimport ImagePreview from \"./ImagePreview\";\r\nimport useClickOutside from \"../../helpers/clickOutside\";\r\nimport { createPost } from \"../../functions/post\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport PostError from \"./PostError\";\r\nimport dataURItoBlob from \"../../helpers/dataURItoBlob\";\r\nimport { uploadImages } from \"../../functions/uploadImages\";\r\n\r\nexport default function CreatePostPopup({\r\n  user,\r\n  setVisible,\r\n  posts,\r\n  dispatch,\r\n  profile,\r\n}) {\r\n  const popup = useRef(null);\r\n  const [text, setText] = useState(\"\");\r\n  const [showPrev, setShowPrev] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const [background, setBackground] = useState(\"\");\r\n  // useClickOutside(popup, () => {\r\n  //   setVisible(false);\r\n  // });\r\n  const postSubmit = async () => {\r\n    if (background) {\r\n      setLoading(true);\r\n      const response = await createPost(\r\n        null,\r\n        background,\r\n        text,\r\n        null,\r\n        user.id,\r\n        user.token\r\n      );\r\n      setLoading(false);\r\n      if (response.status === \"ok\") {\r\n        dispatch({\r\n          type: profile ? \"PROFILE_POSTS\" : \"POSTS_SUCCESS\",\r\n          payload: [response.data, ...posts],\r\n        });\r\n        setBackground(\"\");\r\n        setText(\"\");\r\n        setVisible(false);\r\n      } else {\r\n        setError(response);\r\n      }\r\n    } else if (images && images.length) {\r\n      setLoading(true);\r\n      const postImages = images.map((img) => {\r\n        return dataURItoBlob(img);\r\n      });\r\n      const path = `${user.username}/post_images`;\r\n      let formData = new FormData();\r\n      formData.append(\"path\", path);\r\n      postImages.forEach((image) => {\r\n        formData.append(\"file\", image);\r\n      });\r\n      const response = await uploadImages(formData, path, user.token);\r\n\r\n      const res = await createPost(\r\n        null,\r\n        null,\r\n        text,\r\n        response,\r\n        user.id,\r\n        user.token\r\n      );\r\n      setLoading(false);\r\n      if (res.status === \"ok\") {\r\n        dispatch({\r\n          type: profile ? \"PROFILE_POSTS\" : \"POSTS_SUCCESS\",\r\n          payload: [res.data, ...posts],\r\n        });\r\n        setText(\"\");\r\n        setImages(\"\");\r\n        setVisible(false);\r\n      } else {\r\n        setError(res);\r\n      }\r\n    } else if (text) {\r\n      setLoading(true);\r\n      const response = await createPost(\r\n        null,\r\n        null,\r\n        text,\r\n        null,\r\n        user.id,\r\n        user.token\r\n      );\r\n      setLoading(false);\r\n      if (response.status === \"ok\") {\r\n        dispatch({\r\n          type: profile ? \"PROFILE_POSTS\" : \"POSTS_SUCCESS\",\r\n          payload: [response.data, ...posts],\r\n        });\r\n        setBackground(\"\");\r\n        setText(\"\");\r\n        setVisible(false);\r\n      } else {\r\n        setError(response);\r\n      }\r\n    } else {\r\n      console.log(\"nothing\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"blur\">\r\n      <div className=\"postBox scrollbar\" ref={popup}>\r\n        {error && <PostError error={error} setError={setError} />}\r\n        <div className=\"box_header\">\r\n          <div\r\n            className=\"small_circle\"\r\n            onClick={() => {\r\n              setVisible(false);\r\n            }}\r\n          >\r\n            <i className=\"exit_icon\"></i>\r\n          </div>\r\n          <span>Create Post</span>\r\n        </div>\r\n        <div className=\"box_profile\">\r\n          <img src={user.picture} alt=\"\" className=\"box_profile_img\" />\r\n          <div className=\"box_col\">\r\n            <div className=\"box_profile_name\">\r\n              {user.first_name} {user.last_name}\r\n            </div>\r\n            <div className=\"box_privacy\">\r\n              <img src=\"../../../icons/public.png\" alt=\"\" />\r\n              <span>Public</span>\r\n              <i className=\"arrowDown_icon\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {!showPrev ? (\r\n          <>\r\n            <EmojiPickerBackgrounds\r\n              text={text}\r\n              user={user}\r\n              setText={setText}\r\n              showPrev={showPrev}\r\n              setBackground={setBackground}\r\n              background={background}\r\n            />\r\n          </>\r\n        ) : (\r\n          <ImagePreview\r\n            text={text}\r\n            user={user}\r\n            setText={setText}\r\n            showPrev={showPrev}\r\n            images={images}\r\n            setImages={setImages}\r\n            setShowPrev={setShowPrev}\r\n            setError={setError}\r\n          />\r\n        )}\r\n        <AddToYourPost setShowPrev={setShowPrev} />\r\n        <button\r\n          className=\"post_submit\"\r\n          onClick={() => {\r\n            postSubmit();\r\n          }}\r\n          disabled={loading}\r\n        >\r\n          {loading ? <PulseLoader color=\"#fff\" size={5} /> : \"Post\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}