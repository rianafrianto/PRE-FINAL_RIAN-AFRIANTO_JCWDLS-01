{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Riana\\\\OneDrive\\\\Desktop\\\\Mini Project\\\\facebook\\\\frontend\\\\src\\\\components\\\\createPostPopup\\\\EmojiPickerBackgrounds.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport Picker from \"emoji-picker-react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EmojiPickerBackgrounds(_ref) {\n  _s();\n\n  let {\n    text,\n    user,\n    setText,\n    type2,\n    background,\n    setBackground\n  } = _ref;\n  const [picker, setPicker] = useState(false);\n  const [showBgs, setShowBgs] = useState(false);\n  const [cursorPosition, setCursorPosition] = useState();\n  const textRef = useRef(null);\n  const bgRef = useRef(null);\n  useEffect(() => {\n    textRef.current.selectionEnd = cursorPosition;\n  }, [cursorPosition]);\n\n  const handleEmoji = (e, _ref2) => {\n    let {\n      emoji\n    } = _ref2;\n    const ref = textRef.current;\n    ref.focus();\n    const start = text.substring(0, ref.selectionStart);\n    const end = text.substring(ref.selectionStart);\n    const newText = start + emoji + end;\n    setText(newText);\n    setCursorPosition(start.length + emoji.length);\n  };\n\n  const postBackgrounds = [\"../../../images/postbackgrounds/1.jpg\", \"../../../images/postbackgrounds/2.jpg\", \"../../../images/postbackgrounds/3.jpg\", \"../../../images/postbackgrounds/4.jpg\", \"../../../images/postbackgrounds/5.jpg\", \"../../../images/postbackgrounds/6.jpg\", \"../../../images/postbackgrounds/7.jpg\", \"../../../images/postbackgrounds/8.jpg\", \"../../../images/postbackgrounds/9.jpg\"];\n\n  const backgroundHanlder = i => {\n    bgRef.current.style.backgroundImage = `url(${postBackgrounds[i]})`;\n    setBackground(postBackgrounds[i]);\n    bgRef.current.classList.add(\"bgHandler\");\n  };\n\n  const removeBackground = i => {\n    bgRef.current.style.backgroundImage = \"\";\n    setBackground(\"\");\n    bgRef.current.classList.remove(\"bgHandler\");\n  };\n\n  const sm = useMediaQuery({\n    query: \"(max-width:550px)\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: type2 ? \"images_input\" : \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: !type2 ? \"flex_center\" : \"\",\n      ref: bgRef,\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: textRef,\n        maxLength: \"250\",\n        value: text,\n        placeholder: `What's on your mind, ${user.first_name}`,\n        className: `post_input ${type2 ? \"input2\" : \"\"} ${sm && !background && \"l0\"}`,\n        onChange: e => setText(e.target.value),\n        style: {\n          paddingTop: `${background ? Math.abs(textRef.current.value.length * 0.1 - 32) : \"0\"}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: !type2 ? \"post_emojis_wrap\" : \"\",\n      children: [picker && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `comment_emoji_picker ${type2 ? \"movepicker2\" : \"rlmove\"}`,\n        children: /*#__PURE__*/_jsxDEV(Picker, {\n          onEmojiClick: handleEmoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), !type2 && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"../../../icons/colorful.png\",\n        alt: \"\",\n        onClick: () => {\n          setShowBgs(prev => !prev);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), !type2 && showBgs && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post_backgrounds\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no_bg\",\n          onClick: () => {\n            removeBackground();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), postBackgrounds.map((bg, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: bg,\n          alt: \"\",\n          onClick: () => {\n            backgroundHanlder(i);\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: `emoji_icon_large ${type2 ? \"moveleft\" : \"\"}`,\n        onClick: () => {\n          setPicker(prev => !prev);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EmojiPickerBackgrounds, \"sqG55me0oNe4/45x4MXtAwFxkd0=\", false, function () {\n  return [useMediaQuery];\n});\n\n_c = EmojiPickerBackgrounds;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmojiPickerBackgrounds\");","map":{"version":3,"sources":["C:/Users/Riana/OneDrive/Desktop/Mini Project/facebook/frontend/src/components/createPostPopup/EmojiPickerBackgrounds.js"],"names":["useEffect","useRef","useState","Picker","useMediaQuery","EmojiPickerBackgrounds","text","user","setText","type2","background","setBackground","picker","setPicker","showBgs","setShowBgs","cursorPosition","setCursorPosition","textRef","bgRef","current","selectionEnd","handleEmoji","e","emoji","ref","focus","start","substring","selectionStart","end","newText","length","postBackgrounds","backgroundHanlder","i","style","backgroundImage","classList","add","removeBackground","remove","sm","query","first_name","target","value","paddingTop","Math","abs","prev","map","bg"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport Picker from \"emoji-picker-react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nexport default function EmojiPickerBackgrounds({\r\n  text,\r\n  user,\r\n  setText,\r\n  type2,\r\n  background,\r\n  setBackground,\r\n}) {\r\n  const [picker, setPicker] = useState(false);\r\n  const [showBgs, setShowBgs] = useState(false);\r\n  const [cursorPosition, setCursorPosition] = useState();\r\n  const textRef = useRef(null);\r\n  const bgRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    textRef.current.selectionEnd = cursorPosition;\r\n  }, [cursorPosition]);\r\n  const handleEmoji = (e, { emoji }) => {\r\n    const ref = textRef.current;\r\n    ref.focus();\r\n    const start = text.substring(0, ref.selectionStart);\r\n    const end = text.substring(ref.selectionStart);\r\n    const newText = start + emoji + end;\r\n    setText(newText);\r\n    setCursorPosition(start.length + emoji.length);\r\n  };\r\n  const postBackgrounds = [\r\n    \"../../../images/postbackgrounds/1.jpg\",\r\n    \"../../../images/postbackgrounds/2.jpg\",\r\n    \"../../../images/postbackgrounds/3.jpg\",\r\n    \"../../../images/postbackgrounds/4.jpg\",\r\n    \"../../../images/postbackgrounds/5.jpg\",\r\n    \"../../../images/postbackgrounds/6.jpg\",\r\n    \"../../../images/postbackgrounds/7.jpg\",\r\n    \"../../../images/postbackgrounds/8.jpg\",\r\n    \"../../../images/postbackgrounds/9.jpg\",\r\n  ];\r\n  const backgroundHanlder = (i) => {\r\n    bgRef.current.style.backgroundImage = `url(${postBackgrounds[i]})`;\r\n    setBackground(postBackgrounds[i]);\r\n    bgRef.current.classList.add(\"bgHandler\");\r\n  };\r\n  const removeBackground = (i) => {\r\n    bgRef.current.style.backgroundImage = \"\";\r\n    setBackground(\"\");\r\n    bgRef.current.classList.remove(\"bgHandler\");\r\n  };\r\n  const sm = useMediaQuery({\r\n    query: \"(max-width:550px)\",\r\n  });\r\n  return (\r\n    <div className={type2 ? \"images_input\" : \"\"}>\r\n      <div className={!type2 ? \"flex_center\" : \"\"} ref={bgRef}>\r\n        <textarea\r\n          ref={textRef}\r\n          maxLength=\"250\"\r\n          value={text}\r\n          placeholder={`What's on your mind, ${user.first_name}`}\r\n          className={`post_input ${type2 ? \"input2\" : \"\"} ${\r\n            sm && !background && \"l0\"\r\n          }`}\r\n          onChange={(e) => setText(e.target.value)}\r\n          style={{\r\n            paddingTop: `${\r\n              background\r\n                ? Math.abs(textRef.current.value.length * 0.1 - 32)\r\n                : \"0\"\r\n            }%`,\r\n          }}\r\n        ></textarea>\r\n      </div>\r\n      <div className={!type2 ? \"post_emojis_wrap\" : \"\"}>\r\n        {picker && (\r\n          <div\r\n            className={`comment_emoji_picker ${\r\n              type2 ? \"movepicker2\" : \"rlmove\"\r\n            }`}\r\n          >\r\n            <Picker onEmojiClick={handleEmoji} />\r\n          </div>\r\n        )}\r\n        {!type2 && (\r\n          <img\r\n            src=\"../../../icons/colorful.png\"\r\n            alt=\"\"\r\n            onClick={() => {\r\n              setShowBgs((prev) => !prev);\r\n            }}\r\n          />\r\n        )}\r\n        {!type2 && showBgs && (\r\n          <div className=\"post_backgrounds\">\r\n            <div\r\n              className=\"no_bg\"\r\n              onClick={() => {\r\n                removeBackground();\r\n              }}\r\n            ></div>\r\n            {postBackgrounds.map((bg, i) => (\r\n              <img\r\n                src={bg}\r\n                key={i}\r\n                alt=\"\"\r\n                onClick={() => {\r\n                  backgroundHanlder(i);\r\n                }}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        <i\r\n          className={`emoji_icon_large ${type2 ? \"moveleft\" : \"\"}`}\r\n          onClick={() => {\r\n            setPicker((prev) => !prev);\r\n          }}\r\n        ></i>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}