{"ast":null,"code":"// import { useEffect, useRef, useState } from \"react\";\n// import { Return, Search } from \"../../svg\";\n// import useClickOutside from \"../../helpers/clickOutside\";\n// import {\n//   addToSearchHistory,\n//   getSearchHistory,\n//   removeFromSearch,\n//   search,\n// } from \"../../functions/user\";\n// import { Link } from \"react-router-dom\";\n// export default function SearchMenu({ color, setShowSearchMenu, token }) {\n//   const [iconVisible, setIconVisible] = useState(true);\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const [results, setResults] = useState([]);\n//   const [searchHistory, setSearchHistory] = useState([]);\n//   const menu = useRef(null);\n//   const input = useRef(null);\n//   useClickOutside(menu, () => {\n//     setShowSearchMenu(false);\n//   });\n//   useEffect(() => {\n//     getHistory();\n//   }, []);\n//   const getHistory = async () => {\n//     const res = await getSearchHistory(token);\n//     setSearchHistory(res);\n//   };\n//   useEffect(() => {\n//     input.current.focus();\n//   }, []);\n//   const searchHandler = async () => {\n//     if (searchTerm === \"\") {\n//       setResults(\"\");\n//     } else {\n//       const res = await search(searchTerm, token);\n//       setResults(res);\n//     }\n//   };\n//   const addToSearchHistoryHandler = async (searchUser) => {\n//     const res = await addToSearchHistory(searchUser, token);\n//     getHistory();\n//   };\n//   const handleRemove = async (searchUser) => {\n//     removeFromSearch(searchUser, token);\n//     getHistory();\n//   };\n//   return (\n//     <div className=\"header_left search_area scrollbar\" ref={menu}>\n//       <div className=\"search_wrap\">\n//         <div className=\"header_logo\">\n//           <div\n//             className=\"circle hover1\"\n//             onClick={() => {\n//               setShowSearchMenu(false);\n//             }}\n//           >\n//             <Return color={color} />\n//           </div>\n//         </div>\n//         <div\n//           className=\"search\"\n//           onClick={() => {\n//             input.current.focus();\n//           }}\n//         >\n//           {iconVisible && (\n//             <div>\n//               <Search color={color} />\n//             </div>\n//           )}\n//           <input\n//             type=\"text\"\n//             placeholder=\"Search Metasocial\"\n//             ref={input}\n//             value={searchTerm}\n//             onChange={(e) => setSearchTerm(e.target.value)}\n//             onKeyUp={searchHandler}\n//             onFocus={() => {\n//               setIconVisible(false);\n//             }}\n//             onBlur={() => {\n//               setIconVisible(true);\n//             }}\n//           />\n//         </div>\n//       </div>\n//       {results == \"\" && (\n//         <div className=\"search_history_header\">\n//           <span>Recent searches</span>\n//           <a>Edit</a>\n//         </div>\n//       )}\n//       <div className=\"search_history scrollbar\">\n//         {searchHistory &&\n//           results == \"\" &&\n//           searchHistory\n//             .sort((a, b) => {\n//               return new Date(b.createdAt) - new Date(a.createdAt);\n//             })\n//             .map((user) => (\n//               <div className=\"search_user_item hover1\" key={user._id}>\n//                 <Link\n//                   className=\"flex\"\n//                   to={`/profile/${user.user.username}`}\n//                   onClick={() => addToSearchHistoryHandler(user.user._id)}\n//                 >\n//                   <img src={user.user.picture} alt=\"\" />\n//                   <span>\n//                     {user.user.first_name} {user.user.last_name}\n//                   </span>\n//                 </Link>\n//                 <i\n//                   className=\"exit_icon\"\n//                   onClick={() => {\n//                     handleRemove(user.user._id);\n//                   }}\n//                 ></i>\n//               </div>\n//             ))}\n//       </div>\n//       <div className=\"search_results scrollbar\">\n//         {results &&\n//           results.map((user) => (\n//             <Link\n//               to={`/profile/${user.username}`}\n//               className=\"search_user_item hover1\"\n//               onClick={() => addToSearchHistoryHandler(user._id)}\n//               key={user._id}\n//             >\n//               <img src={user.picture} alt=\"\" />\n//               <span>\n//                 {user.first_name} {user.last_name}\n//               </span>\n//             </Link>\n//           ))}\n//       </div>\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["C:/Users/Riana/OneDrive/Desktop/Mini Project/fullstack/frontend/src/components/header/SearchMenu.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import { useEffect, useRef, useState } from \"react\";\r\n// import { Return, Search } from \"../../svg\";\r\n// import useClickOutside from \"../../helpers/clickOutside\";\r\n// import {\r\n//   addToSearchHistory,\r\n//   getSearchHistory,\r\n//   removeFromSearch,\r\n//   search,\r\n// } from \"../../functions/user\";\r\n// import { Link } from \"react-router-dom\";\r\n// export default function SearchMenu({ color, setShowSearchMenu, token }) {\r\n//   const [iconVisible, setIconVisible] = useState(true);\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [results, setResults] = useState([]);\r\n//   const [searchHistory, setSearchHistory] = useState([]);\r\n//   const menu = useRef(null);\r\n//   const input = useRef(null);\r\n//   useClickOutside(menu, () => {\r\n//     setShowSearchMenu(false);\r\n//   });\r\n//   useEffect(() => {\r\n//     getHistory();\r\n//   }, []);\r\n//   const getHistory = async () => {\r\n//     const res = await getSearchHistory(token);\r\n//     setSearchHistory(res);\r\n//   };\r\n//   useEffect(() => {\r\n//     input.current.focus();\r\n//   }, []);\r\n//   const searchHandler = async () => {\r\n//     if (searchTerm === \"\") {\r\n//       setResults(\"\");\r\n//     } else {\r\n//       const res = await search(searchTerm, token);\r\n//       setResults(res);\r\n//     }\r\n//   };\r\n//   const addToSearchHistoryHandler = async (searchUser) => {\r\n//     const res = await addToSearchHistory(searchUser, token);\r\n//     getHistory();\r\n//   };\r\n//   const handleRemove = async (searchUser) => {\r\n//     removeFromSearch(searchUser, token);\r\n//     getHistory();\r\n//   };\r\n//   return (\r\n//     <div className=\"header_left search_area scrollbar\" ref={menu}>\r\n//       <div className=\"search_wrap\">\r\n//         <div className=\"header_logo\">\r\n//           <div\r\n//             className=\"circle hover1\"\r\n//             onClick={() => {\r\n//               setShowSearchMenu(false);\r\n//             }}\r\n//           >\r\n//             <Return color={color} />\r\n//           </div>\r\n//         </div>\r\n//         <div\r\n//           className=\"search\"\r\n//           onClick={() => {\r\n//             input.current.focus();\r\n//           }}\r\n//         >\r\n//           {iconVisible && (\r\n//             <div>\r\n//               <Search color={color} />\r\n//             </div>\r\n//           )}\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Search Metasocial\"\r\n//             ref={input}\r\n//             value={searchTerm}\r\n//             onChange={(e) => setSearchTerm(e.target.value)}\r\n//             onKeyUp={searchHandler}\r\n//             onFocus={() => {\r\n//               setIconVisible(false);\r\n//             }}\r\n//             onBlur={() => {\r\n//               setIconVisible(true);\r\n//             }}\r\n//           />\r\n//         </div>\r\n//       </div>\r\n//       {results == \"\" && (\r\n//         <div className=\"search_history_header\">\r\n//           <span>Recent searches</span>\r\n//           <a>Edit</a>\r\n//         </div>\r\n//       )}\r\n//       <div className=\"search_history scrollbar\">\r\n//         {searchHistory &&\r\n//           results == \"\" &&\r\n//           searchHistory\r\n//             .sort((a, b) => {\r\n//               return new Date(b.createdAt) - new Date(a.createdAt);\r\n//             })\r\n//             .map((user) => (\r\n//               <div className=\"search_user_item hover1\" key={user._id}>\r\n//                 <Link\r\n//                   className=\"flex\"\r\n//                   to={`/profile/${user.user.username}`}\r\n//                   onClick={() => addToSearchHistoryHandler(user.user._id)}\r\n//                 >\r\n//                   <img src={user.user.picture} alt=\"\" />\r\n//                   <span>\r\n//                     {user.user.first_name} {user.user.last_name}\r\n//                   </span>\r\n//                 </Link>\r\n//                 <i\r\n//                   className=\"exit_icon\"\r\n//                   onClick={() => {\r\n//                     handleRemove(user.user._id);\r\n//                   }}\r\n//                 ></i>\r\n//               </div>\r\n//             ))}\r\n//       </div>\r\n//       <div className=\"search_results scrollbar\">\r\n//         {results &&\r\n//           results.map((user) => (\r\n//             <Link\r\n//               to={`/profile/${user.username}`}\r\n//               className=\"search_user_item hover1\"\r\n//               onClick={() => addToSearchHistoryHandler(user._id)}\r\n//               key={user._id}\r\n//             >\r\n//               <img src={user.picture} alt=\"\" />\r\n//               <span>\r\n//                 {user.first_name} {user.last_name}\r\n//               </span>\r\n//             </Link>\r\n//           ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}