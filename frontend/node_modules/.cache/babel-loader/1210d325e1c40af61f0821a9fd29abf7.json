{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Riana\\\\OneDrive\\\\Desktop\\\\Mini Project\\\\fullstack\\\\frontend\\\\src\\\\components\\\\login\\\\RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport { Form, Formik } from \"formik\";\nimport { useState } from \"react\";\nimport RegisterInput from \"../inputs/registerInput\";\nimport * as Yup from \"yup\"; // import DateOfBirthSelect from \"./DateOfBirthSelect\";\n// import GenderSelect from \"./GenderSelect\";\n\nimport DotLoader from \"react-spinners/DotLoader\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport Cookies from \"js-cookie\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Icon } from \"react-icons-kit\";\nimport { eye } from \"react-icons-kit/feather/eye\";\nimport { eyeOff } from \"react-icons-kit/feather/eyeOff\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegisterForm(_ref) {\n  _s();\n\n  let {\n    setVisible\n  } = _ref;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const userInfos = {\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmationPassword: \"\"\n  };\n  const [user, setUser] = useState(userInfos);\n  const {\n    first_name,\n    last_name,\n    email,\n    password,\n    confirmationPassword\n  } = user;\n\n  const handleRegisterChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser({ ...user,\n      [name]: value\n    });\n  }; // Validation Register\n\n\n  const registerValidation = Yup.object({\n    first_name: Yup.string().required(\"What's your First name ?\").min(2, \"Fisrt name must be between 2 and 16 characters.\").max(16, \"Fisrt name must be between 2 and 16 characters.\").matches(/^[aA-zZ]+$/, \"Numbers and special characters are not allowed.\"),\n    last_name: Yup.string().required(\"What's your Last name ?\").min(2, \"Last name must be between 2 and 16 characters.\").max(16, \"Last name must be between 2 and 16 characters.\").matches(/^[aA-zZ]+$/, \"Numbers and special characters are not allowed.\"),\n    email: Yup.string().required(\"You'll need this when you log in and if you ever need to reset your password.\").email(\"Enter a valid email address.\"),\n    password: Yup.string().required(\"Enter a combination of at least 8 characters including an uppercase letter, a lowercase letter, a symbol, and a number\").min(8, \"Password must be atleast 8 characters.\").max(36, \"Password can't be more than 36 characters\").matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/, \"Weak Password\"),\n    confirmationPassword: Yup.string().required(\"This field is required.\").oneOf([Yup.ref(\"password\"), null], \"Password don't match\")\n  });\n  const [dateError, setDateError] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const registerSubmit = async () => {\n    try {\n      const {\n        data\n      } = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/register`, {\n        first_name,\n        last_name,\n        email,\n        password\n      });\n      setError(\"\");\n      setSuccess(data.message);\n      const {\n        message,\n        ...rest\n      } = data;\n      setTimeout(() => {\n        dispatch({\n          type: \"LOGIN\",\n          payload: rest\n        });\n        Cookies.set(\"user\", JSON.stringify(rest));\n        navigate(\"/\");\n      }, 2000);\n    } catch (error) {\n      setLoading(false);\n      setSuccess(\"\");\n      setError(error.response.data.message);\n    }\n  };\n\n  const [type1, setType1] = useState(\"password\");\n  const [type2, setType2] = useState(\"password\");\n  const [icon1, setIcon1] = useState(eyeOff);\n  const [icon2, setIcon2] = useState(eyeOff);\n\n  const handleToggle1 = () => {\n    if (type1 === \"password\") {\n      setIcon1(eye);\n      setType1(\"text\");\n    } else {\n      setIcon1(eyeOff);\n      setType1(\"password\");\n    }\n  };\n\n  const handleToggle2 = () => {\n    if (type2 === \"password\") {\n      setIcon2(eye);\n      setType2(\"text\");\n    } else {\n      setIcon2(eyeOff);\n      setType2(\"password\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blur\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register scrollbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"exit_icon\",\n          onClick: () => setVisible(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"it's quick and easy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        enableReinitialize: true,\n        initialValues: {\n          first_name,\n          last_name,\n          email,\n          password,\n          confirmationPassword\n        },\n        validationSchema: registerValidation,\n        onSubmit: () => {\n          registerSubmit();\n        },\n        children: _ref2 => {\n          let {\n            isValid\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(Form, {\n            className: \"register_form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reg_line\",\n              children: [/*#__PURE__*/_jsxDEV(RegisterInput, {\n                type: \"text\",\n                placeholder: \"First name\",\n                name: \"first_name\",\n                onChange: handleRegisterChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(RegisterInput, {\n                type: \"text\",\n                placeholder: \"Last name\",\n                name: \"last_name\",\n                onChange: handleRegisterChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reg_line\",\n              children: /*#__PURE__*/_jsxDEV(RegisterInput, {\n                type: \"text\",\n                placeholder: \"Email address\",\n                name: \"email\",\n                onChange: handleRegisterChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reg_line\",\n              style: {\n                position: \"relative\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(RegisterInput, {\n                type: type1,\n                placeholder: \"New password\",\n                name: \"password\",\n                onChange: handleRegisterChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"eye\",\n                onClick: handleToggle1,\n                style: {\n                  position: \"absolute\",\n                  top: \"20px\",\n                  right: \"30px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  icon: icon1,\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reg_line\",\n              style: {\n                position: \"relative\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(RegisterInput, {\n                type: type2,\n                placeholder: \"Confirmation password\",\n                name: \"confirmationPassword\",\n                onChange: handleRegisterChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"eye\",\n                onClick: handleToggle2,\n                style: {\n                  position: \"absolute\",\n                  top: \"20px\",\n                  right: \"30px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  icon: icon2,\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reg_btn_wrapper\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                disabled: !isValid,\n                className: \"blue_btn open_signup\",\n                children: isValid ? \"Sign Up\" : \"Sign Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DotLoader, {\n              color: \"#1876f2\",\n              loading: loading,\n              size: 30\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error_text\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 27\n            }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"success_text\",\n              children: success\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterForm, \"in/Z3nzDNydPyVh+ACp0S0xcTpo=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n\n_c = RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["C:/Users/Riana/OneDrive/Desktop/Mini Project/fullstack/frontend/src/components/login/RegisterForm.js"],"names":["Form","Formik","useState","RegisterInput","Yup","DotLoader","axios","useDispatch","Cookies","useNavigate","Icon","eye","eyeOff","RegisterForm","setVisible","dispatch","navigate","userInfos","first_name","last_name","email","password","confirmationPassword","user","setUser","handleRegisterChange","e","name","value","target","registerValidation","object","string","required","min","max","matches","oneOf","ref","dateError","setDateError","error","setError","success","setSuccess","loading","setLoading","registerSubmit","data","post","process","env","REACT_APP_BACKEND_URL","message","rest","setTimeout","type","payload","set","JSON","stringify","response","type1","setType1","type2","setType2","icon1","setIcon1","icon2","setIcon2","handleToggle1","handleToggle2","isValid","position","top","right"],"mappings":"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","sourcesContent":["import { Form, Formik } from \"formik\";\r\nimport { useState } from \"react\";\r\nimport RegisterInput from \"../inputs/registerInput\";\r\nimport * as Yup from \"yup\";\r\n// import DateOfBirthSelect from \"./DateOfBirthSelect\";\r\n// import GenderSelect from \"./GenderSelect\";\r\nimport DotLoader from \"react-spinners/DotLoader\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Icon } from \"react-icons-kit\";\r\nimport { eye } from \"react-icons-kit/feather/eye\";\r\nimport { eyeOff } from \"react-icons-kit/feather/eyeOff\";\r\n\r\nexport default function RegisterForm({ setVisible }) {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const userInfos = {\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmationPassword: \"\",\r\n  };\r\n  const [user, setUser] = useState(userInfos);\r\n  const { first_name, last_name, email, password, confirmationPassword } = user;\r\n\r\n  const handleRegisterChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  // Validation Register\r\n  const registerValidation = Yup.object({\r\n    first_name: Yup.string()\r\n      .required(\"What's your First name ?\")\r\n      .min(2, \"Fisrt name must be between 2 and 16 characters.\")\r\n      .max(16, \"Fisrt name must be between 2 and 16 characters.\")\r\n      .matches(/^[aA-zZ]+$/, \"Numbers and special characters are not allowed.\"),\r\n    last_name: Yup.string()\r\n      .required(\"What's your Last name ?\")\r\n      .min(2, \"Last name must be between 2 and 16 characters.\")\r\n      .max(16, \"Last name must be between 2 and 16 characters.\")\r\n      .matches(/^[aA-zZ]+$/, \"Numbers and special characters are not allowed.\"),\r\n    email: Yup.string()\r\n      .required(\r\n        \"You'll need this when you log in and if you ever need to reset your password.\"\r\n      )\r\n      .email(\"Enter a valid email address.\"),\r\n    password: Yup.string()\r\n      .required(\r\n        \"Enter a combination of at least 8 characters including an uppercase letter, a lowercase letter, a symbol, and a number\"\r\n      )\r\n      .min(8, \"Password must be atleast 8 characters.\")\r\n      .max(36, \"Password can't be more than 36 characters\")\r\n      .matches(\r\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/,\r\n        \"Weak Password\"\r\n      ),\r\n    confirmationPassword: Yup.string()\r\n      .required(\"This field is required.\")\r\n      .oneOf([Yup.ref(\"password\"), null], \"Password don't match\"),\r\n  });\r\n\r\n  const [dateError, setDateError] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const registerSubmit = async () => {\r\n    try {\r\n      const { data } = await axios.post(\r\n        `${process.env.REACT_APP_BACKEND_URL}/register`,\r\n        {\r\n          first_name,\r\n          last_name,\r\n          email,\r\n          password,\r\n        }\r\n      );\r\n      setError(\"\");\r\n      setSuccess(data.message);\r\n      const { message, ...rest } = data;\r\n      setTimeout(() => {\r\n        dispatch({ type: \"LOGIN\", payload: rest });\r\n        Cookies.set(\"user\", JSON.stringify(rest));\r\n        navigate(\"/\");\r\n      }, 2000);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setSuccess(\"\");\r\n      setError(error.response.data.message);\r\n    }\r\n  };\r\n  const [type1, setType1] = useState(\"password\");\r\n  const [type2, setType2] = useState(\"password\");\r\n  const [icon1, setIcon1] = useState(eyeOff);\r\n  const [icon2, setIcon2] = useState(eyeOff);\r\n  const handleToggle1 = () => {\r\n    if (type1 === \"password\") {\r\n      setIcon1(eye);\r\n      setType1(\"text\");\r\n    } else {\r\n      setIcon1(eyeOff);\r\n      setType1(\"password\");\r\n    }\r\n  };\r\n  const handleToggle2 = () => {\r\n    if (type2 === \"password\") {\r\n      setIcon2(eye);\r\n      setType2(\"text\");\r\n    } else {\r\n      setIcon2(eyeOff);\r\n      setType2(\"password\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"blur\">\r\n      <div className=\"register scrollbar\">\r\n        <div className=\"register_header\">\r\n          <i className=\"exit_icon\" onClick={() => setVisible(false)}></i>\r\n          <span>Sign Up</span>\r\n          <span>it's quick and easy</span>\r\n        </div>\r\n        <Formik\r\n          enableReinitialize\r\n          initialValues={{\r\n            first_name,\r\n            last_name,\r\n            email,\r\n            password,\r\n            confirmationPassword,\r\n          }}\r\n          validationSchema={registerValidation}\r\n          onSubmit={() => {\r\n            registerSubmit();\r\n          }}\r\n        >\r\n          {({ isValid }) => {\r\n            return (\r\n              <Form className=\"register_form\">\r\n                <div className=\"reg_line\">\r\n                  <RegisterInput\r\n                    type=\"text\"\r\n                    placeholder=\"First name\"\r\n                    name=\"first_name\"\r\n                    onChange={handleRegisterChange}\r\n                  />\r\n                  <RegisterInput\r\n                    type=\"text\"\r\n                    placeholder=\"Last name\"\r\n                    name=\"last_name\"\r\n                    onChange={handleRegisterChange}\r\n                  />\r\n                </div>\r\n                <div className=\"reg_line\">\r\n                  <RegisterInput\r\n                    type=\"text\"\r\n                    placeholder=\"Email address\"\r\n                    name=\"email\"\r\n                    onChange={handleRegisterChange}\r\n                  />\r\n                </div>\r\n                <div className=\"reg_line\" style={{ position: \"relative\" }}>\r\n                  <RegisterInput\r\n                    type={type1}\r\n                    placeholder=\"New password\"\r\n                    name=\"password\"\r\n                    onChange={handleRegisterChange}\r\n                  />\r\n\r\n                  <span\r\n                    className=\"eye\"\r\n                    onClick={handleToggle1}\r\n                    style={{ position: \"absolute\", top: \"20px\", right: \"30px\" }}\r\n                  >\r\n                    <Icon icon={icon1} size={20} />\r\n                  </span>\r\n                </div>\r\n                <div className=\"reg_line\" style={{ position: \"relative\" }}>\r\n                  <RegisterInput\r\n                    type={type2}\r\n                    placeholder=\"Confirmation password\"\r\n                    name=\"confirmationPassword\"\r\n                    onChange={handleRegisterChange}\r\n                  />\r\n                  <span\r\n                    className=\"eye\"\r\n                    onClick={handleToggle2}\r\n                    style={{ position: \"absolute\", top: \"20px\", right: \"30px\" }}\r\n                  >\r\n                    <Icon icon={icon2} size={20} />\r\n                  </span>\r\n                </div>\r\n                <div className=\"reg_btn_wrapper\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    disabled={!isValid}\r\n                    className=\"blue_btn open_signup\"\r\n                  >\r\n                    {isValid ? \"Sign Up\" : \"Sign Up\"}\r\n                  </button>\r\n                </div>\r\n                <DotLoader color=\"#1876f2\" loading={loading} size={30} />\r\n                {error && <div className=\"error_text\">{error}</div>}\r\n                {success && <div className=\"success_text\">{success}</div>}\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}