{"ast":null,"code":"export default function dataURItoBlob(dataURI) {\n  // convert base64/URLEncoded data component to raw binary data held in a string\n  var byteString;\n  if (dataURI.split(\",\")[0].indexOf(\"base64\") >= 0) byteString = atob(dataURI.split(\",\")[1]);else byteString = unescape(dataURI.split(\",\")[1]); // separate out the mime component\n\n  var mimeString = dataURI.split(\",\")[0].split(\":\")[1].split(\";\")[0]; // write the bytes of the string to a typed array\n\n  var ia = new Uint8Array(byteString.length);\n\n  for (var i = 0; i < byteString.length; i++) {\n    ia[i] = byteString.charCodeAt(i);\n  }\n\n  return new Blob([ia], {\n    type: mimeString\n  });\n}","map":{"version":3,"sources":["C:/Users/Riana/OneDrive/Desktop/Mini Project/fullstack/frontend/src/helpers/dataURItoBlob.js"],"names":["dataURItoBlob","dataURI","byteString","split","indexOf","atob","unescape","mimeString","ia","Uint8Array","length","i","charCodeAt","Blob","type"],"mappings":"AAAA,eAAe,SAASA,aAAT,CAAuBC,OAAvB,EAAgC;AAC7C;AACA,MAAIC,UAAJ;AACA,MAAID,OAAO,CAACE,KAAR,CAAc,GAAd,EAAmB,CAAnB,EAAsBC,OAAtB,CAA8B,QAA9B,KAA2C,CAA/C,EACEF,UAAU,GAAGG,IAAI,CAACJ,OAAO,CAACE,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAD,CAAjB,CADF,KAEKD,UAAU,GAAGI,QAAQ,CAACL,OAAO,CAACE,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAD,CAArB,CALwC,CAO7C;;AACA,MAAII,UAAU,GAAGN,OAAO,CAACE,KAAR,CAAc,GAAd,EAAmB,CAAnB,EAAsBA,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,EAAoCA,KAApC,CAA0C,GAA1C,EAA+C,CAA/C,CAAjB,CAR6C,CAU7C;;AACA,MAAIK,EAAE,GAAG,IAAIC,UAAJ,CAAeP,UAAU,CAACQ,MAA1B,CAAT;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,UAAU,CAACQ,MAA/B,EAAuCC,CAAC,EAAxC,EAA4C;AAC1CH,IAAAA,EAAE,CAACG,CAAD,CAAF,GAAQT,UAAU,CAACU,UAAX,CAAsBD,CAAtB,CAAR;AACD;;AAED,SAAO,IAAIE,IAAJ,CAAS,CAACL,EAAD,CAAT,EAAe;AAAEM,IAAAA,IAAI,EAAEP;AAAR,GAAf,CAAP;AACD","sourcesContent":["export default function dataURItoBlob(dataURI) {\r\n  // convert base64/URLEncoded data component to raw binary data held in a string\r\n  var byteString;\r\n  if (dataURI.split(\",\")[0].indexOf(\"base64\") >= 0)\r\n    byteString = atob(dataURI.split(\",\")[1]);\r\n  else byteString = unescape(dataURI.split(\",\")[1]);\r\n\r\n  // separate out the mime component\r\n  var mimeString = dataURI.split(\",\")[0].split(\":\")[1].split(\";\")[0];\r\n\r\n  // write the bytes of the string to a typed array\r\n  var ia = new Uint8Array(byteString.length);\r\n  for (var i = 0; i < byteString.length; i++) {\r\n    ia[i] = byteString.charCodeAt(i);\r\n  }\r\n\r\n  return new Blob([ia], { type: mimeString });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}